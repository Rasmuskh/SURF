static const char *RcsId = "$Id $";
//+=============================================================================
//
// file :         CornerStone130StateMachine.cpp
//
// description :  C++ source for the CornerStone130 and its alowed 
//                methods for commands and attributes
//
// project :      TANGO Device Server
//
// $Author: pascal_verdier $
//
// $Revision: 13293 $
// $Date: 2009-04-07 12:53:56 +0200 (Tue, 07 Apr 2009) $
//
// SVN only:
// $HeadURL: $
//
// CVS only:
// $Source$
// $Log$
// Revision 3.3  2007/10/23 14:04:30  pascal_verdier
// Spelling mistakes correction
//
// Revision 3.2  2005/03/02 14:06:15  pascal_verdier
// namespace is different than class name.
//
// Revision 3.1  2004/09/06 09:27:05  pascal_verdier
// Modified for Tango 5 compatibility.
//
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <CornerStone130.h>
#include <CornerStone130Class.h>

/*====================================================================
 *	This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between 
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace CornerStone130_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_gratingNumber_allowed
// 
// description : 	Read/Write allowed for gratingNumber attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_gratingNumber_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_gratingLabel_allowed
// 
// description : 	Read/Write allowed for gratingLabel attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_gratingLabel_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_gratingMaxWL_allowed
// 
// description : 	Read/Write allowed for gratingMaxWL attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_gratingMaxWL_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_filterNumber_allowed
// 
// description : 	Read/Write allowed for filterNumber attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_filterNumber_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_filterLabel_allowed
// 
// description : 	Read/Write allowed for filterLabel attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_filterLabel_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_wavelength_allowed
// 
// description : 	Read/Write allowed for wavelength attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_wavelength_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_shutterClosed_allowed
// 
// description : 	Read/Write allowed for shutterClosed attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_shutterClosed_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}
//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_gratingMinWL_allowed
// 
// description : 	Read/Write allowed for gratingMinWL attribute.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_gratingMinWL_allowed(Tango::AttReqType type)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method : 		CornerStone130::is_Abort_allowed
// 
// description : 	Execution allowed for Abort command.
//
//-----------------------------------------------------------------------------
bool CornerStone130::is_Abort_allowed(const CORBA::Any &any)
{
		//	End of Generated Code

		//	Re-Start of Generated Code
	return true;
}

}	// namespace CornerStone130_ns
